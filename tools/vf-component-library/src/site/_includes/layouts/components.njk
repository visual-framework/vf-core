---
layout: layouts/base.njk
pageClass: components
templateEngineOverride: njk
---
{% set component = pagination.items[0] %}
{% set collectionComponents = component.items %}
{% set variants = component.variants.items %}

<div class="vf-grid">

  <section class="vf-content component-library-notes | vf-stack vf-stack--400">
    {# for any content set in the page, this is most likely blank #}
    {{ content | safe }}

    {% if component.variants.items[0].status.label == "alpha" -%}
      <div class="vf-banner vf-banner--alert vf-banner--danger">
        <div class="vf-banner__content">
        {% set context = {
          "text": "alpha",
          "theme": "tertiary"
          } %}
        {% include "vf-core-components/vf-badge/vf-badge.njk" %}
        <p class="vf-banner__text">
        This version is in early development and is subject to change and therefore <strong>not ready for wide use</strong>. There may be other <a class="vf-banner__link" href="https://www.npmjs.com/package/@visual-framework/{{component.baseHandle}}">stable versions available</a>.
        </p></div>
      </div>
    {%- endif %}
    {% if component.variants.items[0].status.label == "beta" -%}
      <div class="vf-banner vf-banner--alert vf-banner--warning">
        <div class="vf-banner__content"><p class="vf-banner__text">
        {% set context = {
          "text": "beta",
          "theme": "tertiary"
          } %}
        {% include "vf-core-components/vf-badge/vf-badge.njk" %}
        This component version is ready to be used but is still in active development.</p></div>
      </div>
    {%- endif %}
    {% if component.variants.items[0].status.label == "deprecated" -%}
      <div class="vf-banner vf-banner--alert vf-banner--danger">
        <div class="vf-banner__content"><p class="vf-banner__text">
        {% set context = {
          "text": "deprecated",
          "theme": "tertiary"
          } %}
        {% include "vf-core-components/vf-badge/vf-badge.njk" %}
        It is strongly recommended that this <strong>not to be used</strong>.</p></div>
      </div>
    {%- endif %}

    {% if component.handle == "vf-design-tokens" %}
      {% markdown %}
      [View the design token docs](/design-tokens/)
      {% endmarkdown %}
    {% endif %}

    {# readme.md #}
    {% if component.notes %}
      {% if collectionComponents %}
      {% else %}
        {% set componentLinks %}
          <a class="vf-link" href="https://github.com/visual-framework/vf-core/tree/develop/components/{{component.baseHandle}}"><img src="https://img.shields.io/badge/github-{{component.baseHandle | replace("-","--")}}-blue" alt="github location" /></a>
          <a class="vf-link" href="https://badge.fury.io/js/%40visual-framework%2F{{component.baseHandle}}"><img src="https://badge.fury.io/js/%40visual-framework%2F{{component.baseHandle}}.svg" alt="npm version"></a>
        {% endset %}
      {% endif %}

      {% set readmeAbout = component.notes | string | stringBetween("## About", "\n## ") %}
      {% if readmeAbout %}
        {% set readmeAbout = readmeAbout | markdown | safe | striptags | string %}
        {% render '@vf-intro', {
          "id": "about",
          "vf_intro_heading": component.title,
          "vf_intro_badge": {
            "style": [
              "phases"
            ],
            "text": variants[0].context['component-type'],
            "theme": "primary",
            "badge_href": "/components#" + variants[0].context['component-type']
          },
          "vf_intro_subheading": "",
          "vf_intro_lede": readmeAbout.val,
          "vf_intro_text": [
            componentLinks
           ]
        } %}
      {% endif %}
    {% endif %}

    <hr class="vf-divider" />

    {# any sub-components, like vf-form #}
    {# @todo, this is still not rendering correctly #}
    {% if collectionComponents %}
      {# {% render '@vf-heading--display', {
        "type": "display",
        "heading": "There are sub-components",
        "style": "invert",
        "tags": "h1"
      } %} #}
      <ul class="vf-list vf-list--unordered">
        {%- for component in collectionComponents %}
          {% if  component.variants.isHidden ==  false %}
            <li class="vf-list__item"><a class="vf-link" href="{{ component.variants.items[0].alias }}">{{ component.variants.title }}</a> <code> {{ component.variants.items[0].alias }} </code></li>
            {#- <pre>{{ component.variants | dump(2)}}</pre> -#}
          {% endif -%}
        {% endfor -%}
      </ul>
    {% endif %}

    {# Table of contents #}
    {% set navigationList = [
      {
        "text": "Usage",
        "link_list_href": "#usage"
      },
      {
        "text": "Variants",
        "link_list_href": "#variants"
      },
      {
        "text": "Examples",
        "link_list_href": "#examples"
      },
      {
        "text": "Install",
        "link_list_href": "#install"
      },
      {
        "text": "Changelog",
        "link_list_href": "#changelog"
      },
      {
        "text": "Assets",
        "link_list_href": "#assets"
      }
    ] %}
    {% render '@vf-link-list', {
      "component_modifier": "vf-links__list--easy",
      "title": "On this page",
      "svg": true,
      "list":
        navigationList
    } %}

    <hr class="vf-divider" />

    {% if component.notes %}
      {% set readmeUsage = component.notes | string | stringBetween("## Usage", "\n## ") %}
      {% if readmeUsage %}
        <section class="embl-grid">
          {% render '@vf-section-header', {
            "section_title": "Usage",
            "id": "Usage",
            "href": ""
          } %}
          <article>
          {{ readmeUsage | markdown | safe }}
          </article>
        </section>
      {% endif %}
    {% endif %}

    {# ---- #}

    {% if variants %}
      {% render '@vf-heading--display', {
        "type": 1,
        "heading": "Variants",
        "id": "variants",
        "style": "invert",
        "tags": "h2"
      } %}
      {%- for variant in variants %}
        {% if variant.isHidden == false and variant.context['isExample'] != true %}
          {% if variants | length > 1  %}
            {# If more than 1 variant type, show variant specific details #}
            {% render '@vf-section-header--is-a-link', {
              "section_title": "" + variant.label + " variant",
              "id": variant.handle,
              "href": "#" + variant.handle
            } %}
          {% endif %}

          <article class="vf-stack vf-stack--lg vf-u-margin__bottom--1200"
                   style="clear: both; /* insurance against strange components */"
          >
            {% if component.baseHandle == 'vf-u-fullbleed' %}
              {# these get a fake iframe #}
              <article class="vf-box vf-box--outline" style="
                overflow: scroll;
                margin: 0;
                padding: 0;
              ">
                {% render '@'+variant.handle, variant.context %}
              </article>

            {% else %}
              <div class="vf-box"
                   style="overflow: auto; background-image: linear-gradient(45deg, rgba(59, 111, 182, .1) 25%, transparent 25%), linear-gradient(135deg, rgba(59, 111, 182, .1) 25%, transparent 25%), linear-gradient(45deg, transparent 75%, rgba(59, 111, 182, .1) 75%), linear-gradient(135deg, transparent 75%, rgba(59, 111, 182, .1) 75%);background-size: 20px 20px; background-position-x: 0px, 10px, 10px, 0px;background-position-y: 0px, 0px, -10px, 10px;"
              >
                {# When you want a box with a slight shadow #}
                {% render '@'+variant.handle, variant.context %}
              </div>
            {% endif %}
{# variant.context['isExample'] != true and #}
            {% if variant.context['component-type'] != "utility" and variant.context['component-type'] != "grid" and variant.context['component-type'] != "embl-grid" %}
              {# Utility and grid variants have no practical njk or react templates #}
              <details class="vf-details vf-box vf-box--outline">
                <summary class="vf-details--summary">Nunjucks syntax</summary>

      {% markdown %}

Depending on your environment you'll want to use `render` or `include`. As a rule of thumb: server-side use `include`, precompiled browser use `render`. If you're using [vf-eleventy](https://github.com/visual-framework/vf-eleventy) you should use `include`.

### Using `include`

You'll need to pass a context object from your code or Yaml file ([example](https://github.com/visual-framework/vf-eleventy/blob/master/src/site/index.yml)), as well as the path to the Nunjucks template. Nunjucks' `include` is an abstraction of `render` and provides some additional portability.

{# Ideally we could also show the Yaml format here, but that will require additional parsing of the passed `variant.context`. Not impossible, but an additional task #}
      {% endmarkdown %}

                <pre><code>
{%- raw %}
{% set context fromYourYamlFile %}
- or -
{% set context = {% endraw %}
  {{-variant.context | dump(2)}}
{% raw %} %}
{% include "../path_to/{% endraw %}{{variant.baseHandle}}/{{variant.baseHandle}}.njk{%- raw %}" %}{% endraw %}
                </code></pre>

                {# <pre><code>
                {{-variant.context | dump(2)}}
                </code></pre> #}
      {% markdown %}

### Using `render`

This approach is best for bare-bones Nunjucks environments, such as precompiled templates with the Nunjucks slim runtime where `include` is not be available.

      {% endmarkdown %}
                <pre><code>
                {%- raw %}{% render '@{% endraw %}{{variant.baseHandle}}', {{variant.context | dump(2)}} {% raw %}%}{% endraw %}
                </code></pre>
              </details>
              {% set reactComponents = "vf-card, vf-button, vf-back-to-top" %}
              {% if component.baseHandle in reactComponents %}
              <details class="vf-details vf-box vf-box--outline">
                <summary class="vf-details--summary">React syntax (pre-alpha)</summary>
                <pre><code>
import { {{ component.baseHandle | camelize(true) | replace("-", "") }} } from "@visual-framework/{{component.baseHandle}}/{{component.baseHandle}}.react.js";
// or
import { {{ component.baseHandle | camelize(true) | replace("-", "") }} } from "@visual-framework/{{component.baseHandle}}/{{component.baseHandle}}.jsx";
{{ '<' | escape }}{{ component.baseHandle | camelize(true) | replace("-", "") }} parameter="value" />
                </code></pre>
                <br/><p>For individual parameter names and options, see the Nunjucks syntax example. <a href="https://github.com/visual-framework/vf-core/blob/develop/tools/vf-extensions-react/README.md">Also follow the React setup guide</a>. Note: React support is in its early pre-alpha stage and not all component are yet supported.</p>
              </details>
              {% endif %}
            {% endif %}

            {# Show and escaped version of the html #}
            <details class="vf-details vf-box vf-box--outline">
              <summary class="vf-details--summary">HTML</summary>
              <pre>
                {%- render '@'+variant.handle, variant.context, false, { escape: false, beautify: true, highlight: true } %}
              </pre>
            </details>
          </article>
        {% endif %}

      {% endfor -%}

      {# Examples #}
      <hr class="vf-divider" />
      {% render '@vf-heading--display', {
        "type": 1,
        "heading": "Examples",
        "id": "examples",
        "style": "invert",
        "tags": "h2"
      } %}
      {%- for variant in variants %}
        {% if variant.isHidden == false and variant.context['isExample'] == true %}
          <article class="vf-stack vf-stack--lg vf-u-margin__bottom--1200"
                   style="clear: both; /* insurance against strange components */"
          >
            {% if component.baseHandle == 'vf-u-fullbleed' %}
              {# these get a fake iframe #}
              <article class="vf-box vf-box--outline" style="
                overflow: scroll;
                margin: 0;
                padding: 0;
              ">
                {% render '@'+variant.handle, variant.context %}
              </article>

            {% else %}
              <div class="vf-box"
                   style="overflow: auto; background-image: linear-gradient(45deg, rgba(59, 111, 182, .1) 25%, transparent 25%), linear-gradient(135deg, rgba(59, 111, 182, .1) 25%, transparent 25%), linear-gradient(45deg, transparent 75%, rgba(59, 111, 182, .1) 75%), linear-gradient(135deg, transparent 75%, rgba(59, 111, 182, .1) 75%);background-size: 20px 20px; background-position-x: 0px, 10px, 10px, 0px;background-position-y: 0px, 0px, -10px, 10px;"
              >
                {# When you want a box with a slight shadow #}
                {% render '@'+variant.handle, variant.context %}
              </div>
            {% endif %}
          </article>
        {% endif %}

      {% endfor -%}

      {% markdown %}

      {% if component.notes %}
      {% set readmeInstallation = component.notes | string | stringBetween("## Install", "\n## ") %}

      {% if readmeInstallation %}
      <details class="vf-details">
        <summary class="vf-details--summary" id="installation">Installation info</summary>
        {{ readmeInstallation | replace("## Install", "") | markdown | safe }}
      </details>
      {% endif %}

      {% if 'CHANGELOG.md' | length %}
      {% markdown %}
      <div class="vf-stack vf-stack--custom" style="--vf-stack-margin--custom: .5rem;">
      <h3>Changelog</h3>
      <details class="vf-details" id="changelog">
        <summary class="vf-details--summary">Changelog</summary>

        {% include 'CHANGELOG.md' ignore missing %}
      </details>
      </div>
      {% endmarkdown %}
      {% endif %}

    {% else %}
      {% markdown %}
        {% if collectionComponents %}
        <p>This is a collection of components.</p>
        {% endif %}
      {% endmarkdown %}
    {% endif %}

      ### Assets

      - [Nunjucks template]({{ ('/assets/' + component.baseHandle + '/' + component.baseHandle + '.njk') | url }})
      - [Config]({{ ('/assets/' + component.baseHandle + '/' + component.baseHandle + '.config.yml') | url }})

      {%- for asset in component.resources.assets %}
      - [{{asset.base}}]({{ ('/assets/' + asset.relPath ) | url }})
      {%- endfor %}

      {% endmarkdown %}
    {% endif %}

    {% if collectionComponents %}
    {% else %}
      {% markdown %}

        ---

        <br/>

        <p class="vf-text-body vf-text-body--4">
        File system location: <code>components/{{ component.baseHandle }}</code>
        </p>

      {% endmarkdown %}
    {% endif %}

  </section>
</div>
