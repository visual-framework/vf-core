---
layout: layouts/base.njk
pageClass: components
templateEngineOverride: njk
---
{% set component = pagination.items[0] %}
{% set collectionComponents = component.items %}
{% set variants = component.variants.items %}

<div class="embl-grid">
  <nav class="vf-tree vf-search-client-side--no-index" style="z-index: 5150;">
    <div class="vf-tree__inner | vf-u-padding--200">
      {#- all component list -#}
      {#- we're half-implement vf-tree for now until we can ... things -#}
      {%- set types = ['layout', 'element', 'block', 'form', 'container', 'utility'] -%}

      {%- for type in types -%}

      {%- set componentList = [] -%}
      {%- for item in fractalEnvironment.localComponents -%}

        {# Normal "flat" components #}
        {%- if item.isHidden == false and (item.variants.items[0].context['component-type'] == type or item.variants.items[0].context['component-type'] == 'embl-' + type) -%}
          {% set componentList = (componentList.push({ "text": item.title, "link_list_href": ('/components/' + item.handle) | string | url }),componentList) %}
        {%- endif -%}

        {# Handle component collections #}
        {%- if item.isCollection == true %}
          {%- for collection in item.items %}
            {% if collection.isHidden == false and (collection.variants.items[0].context['component-type'] == type or collection.variants.items[0].context['component-type'] == 'embl-' + type) %}
              {# <pre>{{ item | dump(2)}}</pre> #}
              {% set componentList = (componentList.push({ "text": collection.title, "link_list_href": ('/components/' + item.handle + '/' + collection.handle) | string | url }),componentList) %}
            {%- endif %}
          {%- endfor %}
        {%- endif %}

      {%- endfor -%}

      {%- render '@vf-link-list--tight', {
        "component-type": "block",
        "component_modifier": "vf-links--tight vf-links__list--s",
        "title": type | title,
        "list_modifier": "secondary",
        "list":
          componentList
      } -%}

      {% endfor -%}
      <!-- some tools don't have a natural place in the component library and are linked to githup -->
      <h3 class="vf-links__heading">Tools</h3>
      <ul class="vf-links__list vf-links__list--secondary | vf-list">
        <li class="vf-list__item">
          <a class="vf-list__link" href="https://github.com/visual-framework/vf-core/tree/develop/tools/vf-extensions">
            VF extensions
          </a>
        </li>
        <li class="vf-list__item">
          <a class="vf-list__link" href="https://github.com/visual-framework/vf-core/blob/develop/tools/vf-extensions-react/README.md">
            React extensions
          </a>
        </li>
        <li class="vf-list__item">
          <a class="vf-list__link" href="https://github.com/visual-framework/vf-core/tree/develop/tools/vf-sass-compilation">
            Sass compilation
          </a>
        </li>
        <li class="vf-list__item">
          <a class="vf-list__link" href="https://github.com/visual-framework/vf-core/tree/develop/tools/vf-component-generator">
            Component generator
          </a>
        </li>
      </ul>
    </div>
  </nav>

  <section class="vf-content component-library-notes | vf-stack vf-stack--400">
    {# for any content set in the page, this is most likely blank #}
    {{ content | safe }}

    <h1>
      {{ component.title }}
        {# {{component.baseHandle}} #}
        {% if collectionComponents %}
        {% else %}
          <a class="vf-link" href="https://github.com/visual-framework/vf-core/tree/develop/components/{{component.baseHandle}}"><img src="https://img.shields.io/badge/github-{{component.baseHandle | replace("-","--")}}-blue" alt="github location" /></a>
          <a class="vf-link" href="https://badge.fury.io/js/%40visual-framework%2F{{component.baseHandle}}"><img src="https://badge.fury.io/js/%40visual-framework%2F{{component.baseHandle}}.svg" alt="npm version"></a>
          {# <a  href="https://www.npmjs.com/package/@visual-framework/{{component.baseHandle}}">npm</a> #}
        {% endif %}

    </h1>

    {# <pre>{{ component | dump(2)}}</pre> #}

    {# readme.md #}
    {% if component.notes %}
      {% set readmeAbout = component.notes | string | stringBetween("## About", "\n## ") %}
      {% if readmeAbout %}{{ readmeAbout | markdown | safe }}{% endif %}
    {% endif %}

    {# any sub-components, like vf-form #}
    {# @todo, this is still not rendering correctly #}
    {% if collectionComponents %}
      {# {% render '@vf-heading--display', {
        "type": "display",
        "heading": "There are sub-components",
        "style": "invert",
        "tags": "h1"
      } %} #}
      <ul class="vf-list vf-list--unordered">
        {%- for component in collectionComponents %}
          {% if  component.variants.isHidden ==  false %}
            <li class="vf-list__item"><a class="vf-link" href="{{ component.variants.items[0].alias }}">{{ component.variants.title }}</a> <code> {{ component.variants.items[0].alias }} </code></li>
            {#- <pre>{{ component.variants | dump(2)}}</pre> -#}
          {% endif -%}
        {% endfor -%}
      </ul>
    {% endif %}

    {% if variants %}
      {% if variants | length > 1 %}
        {# If more than 1 variant type, show a heading #}
        <section class="vf-u-margin__top--800">
          {% render '@vf-heading--display', {
            "type": 1,
            "heading": "Variants",
            "id": "variants",
            "style": "invert",
            "tags": "h2"
          } %}
        </section>

        {# Variant table of contents #}
        {%- set variantList = [] -%}
        {%- for variant in variants %}
          {% if variant.isHidden == false%}
            {% set variantList = (variantList.push({
              "text": variant.title,
              "link_list_href": '#' + variant.handle
            }), variantList)
            %}
          {% endif %}
        {% endfor %}

        {% render '@vf-link-list', {
          "component_modifier": "vf-links__list--easy",
          "title": "",
          "svg": true,
          "list":
            variantList
        } %}

        <hr class="vf-divider vf-u-margin__top--1200 vf-u-margin__bottom--1200" />

      {% endif %}

      {%- for variant in variants %}

        {% if variant.isHidden == false%}
          {% if variants | length > 1 %}
            {# If more than 1 variant type, show variant specific details #}

            {% render '@vf-section-header--is-a-link', {
              "section_title": "Variant example: " + variant.label,
              "id": variant.handle,
              "href": "#" + variant.handle
            } %}
          {% endif %}

          <article class="vf-stack vf-stack--lg vf-u-margin__bottom--1200"
                   style="clear: both; /* insurance against strange components */"
          >

            {% if component.baseHandle == 'vf-u-fullbleed' %}
              {# these get a fake iframe #}
              <article class="vf-box vf-box--outline" style="
                overflow: scroll;
                margin: 0;
                padding: 0;
              ">
                {% render '@'+variant.handle, variant.context %}
              </article>

            {% else %}
              <div class="vf-box"
                   style="background-image: linear-gradient(45deg, rgba(59, 111, 182, .1) 25%, transparent 25%), linear-gradient(135deg, rgba(59, 111, 182, .1) 25%, transparent 25%), linear-gradient(45deg, transparent 75%, rgba(59, 111, 182, .1) 75%), linear-gradient(135deg, transparent 75%, rgba(59, 111, 182, .1) 75%);background-size: 20px 20px; background-position-x: 0px, 10px, 10px, 0px;background-position-y: 0px, 0px, -10px, 10px;"
              >
                {# When you want a box with a slight shadow #}
                {% render '@'+variant.handle, variant.context %}
              </div>
            {% endif %}

            {% if variant.context['component-type'] != "utility" and variant.context['component-type'] != "grid" and variant.context['component-type'] != "embl-grid" %}
              {# Utility and grid variants have no practical njk or react templates #}
              <details class="vf-details vf-box vf-box--outline">
                <summary class="vf-details--summary">Nunjucks syntax</summary>

      {% markdown %}

Depending on your environment you'll want to use `render` or `include`. As a rule of thumb: server-side use `include`, precompiled browser use `render`. If you're using [vf-eleventy](https://github.com/visual-framework/vf-eleventy) you should use `include`.

### Using `include`

You'll need to pass a context object from your code or Yaml file ([exampe](https://github.com/visual-framework/vf-eleventy/blob/master/src/site/index.yml)), as well as the path to the Nunjucks template. Nunjucks' `include` is an abstraction of `render` and provides some additional portability.

{# Ideally we could also show the Yaml format here, but that will require additional parsing of the passed `variant.context`. Not impossible, but an additional task #}
      {% endmarkdown %}

                <pre><code>
{%- raw %}
{% set context fromYourYamlFile %}
- or -
{% set context = {% endraw %}
  {{-variant.context | dump(2)}}
{% raw %} %}
{% include "../path_to/{% endraw %}{{variant.baseHandle}}/{{variant.baseHandle}}.njk{%- raw %}" %}{% endraw %}
                </code></pre>

                {# <pre><code>
                {{-variant.context | dump(2)}}
                </code></pre> #}

      {% markdown %}


### Using `render`

This approach is best for bare-bones Nunjucks environments, such as precompiled templates with the Nunjucks slim runtime where `include` is not be available.

      {% endmarkdown %}


                <pre><code>
                {%- raw %}{% render '@{% endraw %}{{variant.baseHandle}}', {{variant.context | dump(2)}} {% raw %}%}{% endraw %}
                </code></pre>


              </details>

              {% if component.baseHandle == "vf-card" or component.baseHandle == "vf-button" %}
              <details class="vf-details vf-box vf-box--outline">
                <summary class="vf-details--summary">React syntax (pre-alpha)</summary>
                <pre><code>
import { {{ component.baseHandle | camelize(true) }} } from "@visual-framework/{{component.baseHandle}}/{{component.baseHandle}}.react.js";
{{ '<' | escape }}{{ component.baseHandle | camelize(true) }} parameter="value" />
                </code></pre>
                <br/><p>For individual parameter names and options, see the Nunjucks syntax example. <a href="https://github.com/visual-framework/vf-core/blob/develop/tools/vf-extensions-react/README.md">Also follow the React setup guide</a>. Note: React support is in its early pre-alpha stage and not all component are yet supported.</p>
              </details>
              {% endif %}
            {% endif %}

            {# Show and escaped version of the html #}
            <details class="vf-details vf-box vf-box--outline">
              <summary class="vf-details--summary">HTML</summary>
              <pre>
                {%- render '@'+variant.handle, variant.context, false, { escape: false, beautify: true, highlight: true } %}
              </pre>
            </details>
          </article>
        {% endif %}

      {% endfor -%}

      {% markdown %}

      {% if component.notes %}
      {% set readmeUsage = component.notes | string | stringBetween("## Usage", "\n## ") %}
      {% set readmeInstallation = component.notes | string | stringBetween("## Install", "\n## ") %}

      {% if readmeUsage %}
        <h2 id="usage">Usage</h2>
        {{ readmeUsage | markdown | safe }}
      {% endif %}

      {% if readmeInstallation %}
      <details class="vf-details">
        <summary class="vf-details--summary" id="installation">Installation info</summary>
        {{ readmeInstallation | replace("## Install", "") | markdown | safe }}
      </details>
      {% endif %}

      {% if 'CHANGELOG.md'|length %}
      {% markdown %}
      <div class="vf-stack vf-stack--custom" style="--vf-stack-margin--custom: .5rem;">
      <h3>Changelog</h3>
      <details class="vf-details" id="changelog">
        <summary class="vf-details--summary">Changelog</summary>

        {% include 'CHANGELOG.md' ignore missing %}
      </details>
      </div>
      {% endmarkdown %}

      {% endif %}

    {% else %}
      {% markdown %}
        {% if collectionComponents %}
        <p>This is a collection of components.</p>
        {% endif %}
      {% endmarkdown %}
    {% endif %}

      ### Assets

      - [Nunjucks template]({{ ('/assets/' + component.baseHandle + '/' + component.baseHandle + '.njk') | url }})
      - [Config]({{ ('/assets/' + component.baseHandle + '/' + component.baseHandle + '.config.yml') | url }})

      {%- for asset in component.resources.assets %}
      - [{{asset.base}}]({{ ('/assets/' + asset.relPath ) | url }})
      {%- endfor %}

      {% endmarkdown %}
    {% endif %}

    {% if collectionComponents %}
    {% else %}
      {% markdown %}

        ---

        <br/>

        <p class="vf-text-body vf-text-body--4">
        File system location: <code>components/{{ component.baseHandle }}</code>
        </p>

      {% endmarkdown %}
    {% endif %}

  </section>
</div>
