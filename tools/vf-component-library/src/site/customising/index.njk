---
is_index: true
title: Customising your design system
subtitle: Now that you've installed [`vf-demo-design-system`](https://github.com/visual-framework/vf-demo-design-system), learn how it works and how to adapt it to your needs.
section: customising
tags: sections
date: 2018-03-21 12:24:50
layout: layouts/section.njk
---

## The major projects in use

To make full use of this boilerplate, you'll need to be familiar with these projects:

- [Visual Framework for life science websites](#how-vf): designed for use when you don't want your other CSS and JS to break
- [Gulp](#how-gulp): a task runner to get Fractal and Eleventy to "talk to each other" and other niceties around file optimisation and Sass
- [Fractal component library](#how-fractal): modular and nested components
- [Eleventy static site generator](#how-eleventy): fast and flexible templating, and adapted to use of Fractal components
- [Nunjucks](#how-nunjucks): "A rich and powerful templating language for JavaScript", it's common to Fractal, Eleventy and also used by the Visual Framework

## How things work

<a name="how-vf"></a>
### 1. [Visual Framework](https://visual-framework.github.io/vf-welcome)

- The Visual Framework is a methedology [around components and how they're made](https://visual-framework.github.io/vf-welcome/documentation/#getting-started); and
- This boilerplate uses the [`vf-core`](https://github.com/visual-framework/vf-core) to assemble Sass and component structure

<a name="how-gulp"></a>
### 2. [Gulp](https://gulpjs.com)

- Gulp will initiate all the tasks and for local development `gulp dev` is your go-to command
- Review `./gulpfile.js` for insight into the specific tasks

<a name="how-fractal"></a>
### 3. [Fractal](https://fractal.build)

- Fractal is responsible for assembling the Visual Framework-compatible components and their templates
- Local components live in `.src/components`
- Visual Framework core components are installed by `yarn` to `node_modules` and symlinked from `.src/components/vf-core-components`

<a name="how-eleventy"></a>
### 4. [Eleventy](https://www.11ty.io)

- Eleventy is responsible for page building and high level templates
- Eleventy is also passed the Visual Framework components via Fractal so you have full use of a component's assets and Nunjuck templates
- Review `./eleventy.js` for insight into the configuration

<a name="how-nunjucks"></a>
### 5. [Nunjucks](https://mozilla.github.io/nunjucks/)

This templating language is used throughout so you can not only use a nice templatin language but also have direct access to component templates:

<pre><code>{%- verbatim %}Code: {% render "@vf-sample", {text: "with some text"} %}{% endverbatim %}</pre></code>
<pre><code>Returns: {% render "@vf-sample", {text: "with some text"}, false, { escape: false, beautify: true, highlight: true } %}
</code></pre>

Want Markdown? You can use it for entire files or by with Nunjuck blocks and tags.

#### Markdown file support

Name your file with the Markdown suffix (`index.md`) or a page's [front matter](https://www.11ty.io/docs/data-frontmatter/):

```
templateEngineOverride: njk, md
```

#### Markdown filter

<pre><code>Nunjcuks: {%- verbatim %}{{ "I'm some `markdown`" | markdown | safe }}{% endverbatim %}</pre></code>
<pre><code>Returns: {{ "I'm some `markdown`" | markdown | escape }}</pre></code>

#### Markdown tag

<div>
<pre><code>Nunjcuks: {%- verbatim %}
{% markdown %}
[A link](#)
{% endmarkdown %}
{% endverbatim %}</pre></code>
</div>

<pre><code>
Returns: {% markdown -%}[A link](#){%- endmarkdown -%}</pre></code>

## Actions to do, files to edit

Now that you know a bit about the configuration, here's how to start customising.

### Browse, add, make components

- See what components are already installed: [/components]({{ '/components' | url }})
- [Browse all vf-core components](https://visual-framework.github.io/vf-core/#components)
- [Directions to add pre-made components](https://visual-framework.github.io/vf-eleventy/)
- Then reference the new component in `./src/components/vf-componenet-rollup/index.scss`

### Configuration options

- In `./package.json` update the `vfConfig` property
- In `.src/site/_data/siteConfig.js` add site name and e-mail options
- In `./eleventy.js` update `pathPrefix`, or comment it out if you don't deploy to a subdirectory

### Customise page templates

Page templates are located at `.src/site/_data/site/_includes/layouts`, you can learn [more about layout's in Eleventy's docs](https://www.11ty.io/docs/layouts/).

### Add pages

Pages are located at `.src/site/_data/site/`. Have a look at some of the existing pages and copy them to make new pages.

### Local CSS, JS, images

There's usually a need for "edge cases":

- CSS/Sass: `./src/scss/app.scss`, and reference like `{{ '/css/app.css' | url }}`
- JS: `./src/js/your-js-file.scss`, and reference like `{{ '/js/scripts.js' | url }}`
- Images: `./src/site/images`, and reference like `{{ '/images/myimage.png' | url }}`

## Outputs: what is made

When you run `gulp dev` or `gulp build`, Eleventy will build your static pages and trigger the Visual Framework.

- Generated site is output to `./build`
- `<link rel="stylesheet" media="all" href="{{ '/css/styles.css' | url }}" />`
- `<script src="{{ '/scripts/scripts.js' | url }}"></script>`

## Deploying your design system

- Manually: run `gulp build` and copy `./build` to your server
- CI: See `./travis.yml` file for ideas

Common issue: Not deploying to the right subdirectory? Make sure in `./eleventy.js`
you've updated `pathPrefix`.

## The component library

A full component library is available at [`/components`]({{ '/components' | url }})

The component library is generated by tapping into an export Fractal's component index:

1. the component list is updated whenever a component is edited or added
1. the data is eposed to Eleventy at `./src/site/_data/fractalEnvironment.js`
1. individual component pages are created using Eleventy's [pagination feature](https://www.11ty.io/docs/pagination/)
    - `./src/site/components/component-view.njk`
    - `./src/site/components/vf-core-components.njk`
1. a page template drives the layout of the components `./src/site/_includes/layouts/components.njk`
