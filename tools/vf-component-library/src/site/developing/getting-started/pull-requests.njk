---
title: Making your first Pull Request
date: 2019-04-09 12:24:50
layout: layouts/section.njk
section: developing
order: 5
tags:
  - getting started
  - developing
  - documentation
---

To contribute code back, you'll need to make a PR ([Pull Request](https://help.github.com/en/articles/about-pull-requests)),
as you won't have write access, GitHub will prompt you to fork the `vf-core` repository
and then you'll be able to push your branch and open a pull request.

## What?

If you're thoroughly confused, here are a few helpful links:

- [About branches](https://help.github.com/en/articles/about-branches)
- [Making a fork and pull request](https://www.youtube.com/watch?v=rgbCcBNZcdQ) (video)


## Branch naming conventions

In general `type/brief-description-of-branch`, example: `component/advanced-search`,
or `fix/grid-breaks-on-ios`

Here are the most common `type`s:

- `components/` when developing a new component;
- `feature/` to be used when working on something that affects the whole system;
- `fix/` to be used for ... fixes;
- `hot-fix/` something very specific and usually urgent; and
- `docs/` for anything to do with documentation, content or code.

## Automated testing

### On push

When you push your branch to GitHub, [Husky](https://github.com/typicode/husky#husky)
will run a pre-commit hook to help enforce Sass linting and ensure the code
builds.

### Visual differences

To be confident that we can ammend components code if needed without breaking anything we need to test against the agreed look and interaction(s) of a component.

We are making use of [Percy](https://percy.io/EMBL/EMBL-Visual-Framework) to do this, comparisons will be automatically generated before a pull request for a component is accepted.
