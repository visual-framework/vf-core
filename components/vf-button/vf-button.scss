// vf-button

@import 'package.variables.scss';
// Debug information from component's `package.json`:
// ---
/*!
* Component: #{map-get($componentInfo, 'name')}
* Version: #{map-get($componentInfo, 'version')}
* Location: #{map-get($componentInfo, 'location')}
*/
// vf-button

$button-hover-fix: -5px -5px rgba(0, 0, 0, 0);
.vf-button {

  --vf-button__color__background--default: var(--vf-color--grey);
  --vf-button__color__background--default-dark: var(--vf-color--grey--darkest);
  --vf-button__color__border--default-visited: var(--vf-color--grey--lightest);

  @include set-type(text-button--1);

  align-self: center;
  /* stylelint-disable */
  -webkit-appearance: none;
  appearance: none;
  /* stylelint-enable */
  backface-visibility: hidden;
  background-color: ui-color(black);
  background-color: var(--vf-button-background-color, var(--vf-button__color__background--default));
  border: 4px solid ui-color(black);
  border: 4px solid var(--vf-button-border-color, var(--vf-button__color__background--default));
  box-shadow: 8px 8px 0 var(--vf-button-shadow-background-color, var(--vf-button__color__background--default-dark)), $button-hover-fix;
  color: ui-color(white); // fallback, IE
  color: var(--vf-button-text-color, ui-color(white));
  cursor: pointer;
  display: inline-block;
  margin: 0 16px 16px 0;
  outline: 0;
  padding: 12px 24px;
  position: relative;
  text-align: center;
  text-decoration: none;
  transform: translate(0, 0);
  transition: all linear 125ms;
  // Ideally we want this to be 50ms but there's an issue in Webkit/Safari on box-shadow animations
  // additionally we can't do a pseude :before/:after as we need to support <button> elements
  // https://github.com/visual-framework/vf-core/pull/632


  // Hover and Focus Styles
  &:focus,
  &:hover {
    box-shadow: 4px 4px 0 var(--vf-button-shadow-background-color, var(--vf-button__color__background--default-dark)), 2px 2px 4px rgba(ui-color(black), .25), $button-hover-fix;
    transform: translate(4px, 4px);
    transition: all linear 125ms;
  }

  // Active Styles
  &:active {
    box-shadow: 0px 0px 0 var(--vf-button-shadow-background-color, var(--vf-button__color__background--default-dark)), 2px 2px 2px rgba(ui-color(black), .125), $button-hover-fix;
    transform: translate(8px, 8px) translateZ(1px);
  }
}

a.vf-button {
  &:hover,
  &:focus {
    text-decoration: none;
  }
}

.vf-button--primary {
  --vf-button-border-color: var(--vf-color--blue);
  --vf-button-background-color: var(--vf-color--blue);

  --vf-button-shadow-border-color: var(--vf-color--blue--dark);
  --vf-button-shadow-background-color: var(--vf-color--blue--dark);

  --vf-button-border-color--visited: var(--vf-color--blue--light);
}

.vf-button--secondary {
  --vf-button-border-color: var(--vf-color--green);
  --vf-button-background-color: var(--vf-color--green);

  --vf-button-text-color: var(--vf-ui-color--black);

  --vf-button-shadow-border-color: var(--vf-color--green--dark);
  --vf-button-shadow-background-color: var(--vf-color--green--dark);

  --vf-button-border-color--visited: var(--vf-color--green--light);
}

.vf-button--tertiary {
  --vf-button-border-color: var(--vf-color--grey);
  --vf-button-background-color: var(--vf-color--grey);

  --vf-button-shadow-border-color: var(--vf-color--grey--dark);
  --vf-button-shadow-background-color: var(--vf-color--grey--dark);

  --vf-button-border-color--visited: var(--vf-color--grey--light);
}

.vf-button--outline {
  --vf-button-background-color: #{ui-color(white)};
  color: color(blue); // fallback, IE
  color: var(--vf-button-border-color, var(--vf-button__color__background--default) );

  &:focus,
  &:hover {
    color: color(blue); // fallback, IE
    color: var(--vf-button-border-color);
  }
}

.vf-button--pill {
  border-radius: 500px;

  &::before {
    border-radius: 500px;
  }
}

.vf-button--rounded {
  border-radius: $vf-radius--md;
}

.vf-button--sm {
  @include set-type(text-button--2);

  padding: 8px;
  // @include padding(all, map-get($vf-spacing-map, vf-spacing--200));

  &.vf-button--rounded {
    border-radius: 8px;
  }
}

.vf-button--lg {
  @include set-type(text-button--1);

  padding: 16px;
}

.vf-button--icon {
  background: none;
  border: 0;
  box-shadow: none;
  color: currentColor;
  cursor: pointer;
  margin: 0;
  outline: none;
  padding: 0;
  transform: none;
  &:focus,
  &:hover {
    box-shadow: none;
    transform: none;
  }
}


// Begin deprecated classes and styles
html:not(.vf-disable-deprecated) {

  // Deprecated in 1.0.0-beta.7
  // Will be removed in vf-button v2.0
  .vf-text-button--secondary {
    @include button-link($vf-link--color: color(green), $vf-link--hover-color: color(green--dark));

    box-shadow: 0px 6px 0px 0px color(green--dark);
    margin-bottom: 6px; // because we're using box-shadow we need to 'create the space' again

    &:hover {
      box-shadow: 0px 2px 0px 0px color(green--dark);
    }
  }

  // Deprecated in 1.0.0-beta.7
  // Will be removed in vf-button v2.0
  .vf-button--outline.vf-text--button--secondary {
    @include button-link--ghost( $vf-link--color: color(green) );
  }

  // Deprecated in 1.0.0-beta.7
  // Will be removed in vf-button v2.0
  .vf-text-button--2 {
    @include set-type(text-button--2);
    padding: 8px;

    &.vf-text-button--rounded {
      border-radius: 8px;
    }
  }

  // Deprecated in 1.0.0-beta.7
  // Will be removed in vf-button v2.0
  .vf-text-button--1 {
    @include set-type(text-button--1);

    padding: 16px;
  }

}
// End deprecated
