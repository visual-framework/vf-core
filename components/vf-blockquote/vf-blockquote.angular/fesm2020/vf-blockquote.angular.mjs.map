{"version":3,"file":"vf-blockquote.angular.mjs","sources":["../../../projects/vf-blockquote.angular/src/lib/vf-blockquote.angular.component.ts","../../../projects/vf-blockquote.angular/src/lib/vf-blockquote.angular.module.ts","../../../projects/vf-blockquote.angular/src/public-api.ts","../../../projects/vf-blockquote.angular/src/vf-blockquote.angular.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'vf-blockquote',\n  template: `\n    <blockquote [attr.id]=\"id !== undefined ? id : null\" [class]=\"class\">\n        <img *ngIf=\"blockquote_author_imageurl !== ''\" class=\"vf-profile__image vf-u-margin__right--600\" [src]=\"blockquote_author_imageurl\" alt=\"\" loading=\"lazy\" />\n        <div>\n          <div>{{ quote }}</div>\n          <footer class=\"vf-u-margin__top--600\">\n            <a *ngIf=\"blockquote_author_href !== ''; else quoteauthorplain\" class=\"vf-blockquote_author__link\" [href]=\"blockquote_author_href\" [innerHTML]=\"blockquote_author\"></a>\n            <ng-template #quoteauthorplain>{{ blockquote_author }}</ng-template>\n            <div *ngIf=\"blockquote_author_details !== ''\" class=\"vf-text-body--2\">{{ blockquote_author_details }}</div>\n          </footer>\n        </div>\n    </blockquote>\n  `,\n  styles: [],\n})\nexport class VfBlockquoteAngularComponent implements OnInit {\n  /* Initialize values based on input values */\n  @Input() id: string | undefined;\n  @Input() html = '';\n  @Input() text = '';\n  @Input() blockquote_text = '';\n  @Input() blockquote_author = '';\n  @Input() blockquote_author_href = '';\n  @Input() blockquote_author_details = '';\n  @Input() blockquote_author_imageurl = '';\n  @Input() override_class = '';\n\n  class = '';\n  quote = '';\n\n  ngOnInit(): void {\n    //Initialize  something\n  }\n\n  ngOnChanges(): void {\n    this.setValues();\n  }\n\n  /* Set values as per input and updated changes */\n  setValues(): void {\n    /* Conditional styles, strings, nullables, arrays of styles */\n    this.class = 'vf-blockquote vf-u-margin__left--800';\n    this.class += this.override_class ? this.override_class : '';\n\n    /* Inner content of the quote based on whether HTML or Text */\n    this.quote = this.blockquote_text\n      ? this.blockquote_text\n      : this.html\n      ? this.html\n      : this.text;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VfBlockquoteAngularComponent } from './vf-blockquote.angular.component';\n\n\n\n@NgModule({\n  declarations: [\n    VfBlockquoteAngularComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    VfBlockquoteAngularComponent\n  ]\n})\nexport class VfBlockquoteAngularModule { }\n","/*\n * Public API Surface of vf-blockquote.angular\n */\n\nexport * from './lib/vf-blockquote.angular.component';\nexport * from './lib/vf-blockquote.angular.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;MAmBa,4BAA4B,CAAA;AAjBzC,IAAA,WAAA,GAAA;QAoBW,IAAI,CAAA,IAAA,GAAG,EAAE,CAAC;QACV,IAAI,CAAA,IAAA,GAAG,EAAE,CAAC;QACV,IAAe,CAAA,eAAA,GAAG,EAAE,CAAC;QACrB,IAAiB,CAAA,iBAAA,GAAG,EAAE,CAAC;QACvB,IAAsB,CAAA,sBAAA,GAAG,EAAE,CAAC;QAC5B,IAAyB,CAAA,yBAAA,GAAG,EAAE,CAAC;QAC/B,IAA0B,CAAA,0BAAA,GAAG,EAAE,CAAC;QAChC,IAAc,CAAA,cAAA,GAAG,EAAE,CAAC;QAE7B,IAAK,CAAA,KAAA,GAAG,EAAE,CAAC;QACX,IAAK,CAAA,KAAA,GAAG,EAAE,CAAC;AAuBZ,KAAA;IArBC,QAAQ,GAAA;;KAEP;IAED,WAAW,GAAA;QACT,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;;IAGD,SAAS,GAAA;;AAEP,QAAA,IAAI,CAAC,KAAK,GAAG,sCAAsC,CAAC;AACpD,QAAA,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;;AAG7D,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe;cAC7B,IAAI,CAAC,eAAe;cACpB,IAAI,CAAC,IAAI;kBACT,IAAI,CAAC,IAAI;AACX,kBAAE,IAAI,CAAC,IAAI,CAAC;KACf;;yHAnCU,4BAA4B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA5B,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,4BAA4B,EAf7B,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,MAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,yBAAA,EAAA,2BAAA,EAAA,0BAAA,EAAA,4BAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;;;;;;;;;AAYT,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FAGU,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBAjBxC,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,eAAe,EACf,QAAA,EAAA,CAAA;;;;;;;;;;;;AAYT,EAAA,CAAA,EAAA,CAAA;8BAKQ,EAAE,EAAA,CAAA;sBAAV,KAAK;gBACG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBACG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBACG,eAAe,EAAA,CAAA;sBAAvB,KAAK;gBACG,iBAAiB,EAAA,CAAA;sBAAzB,KAAK;gBACG,sBAAsB,EAAA,CAAA;sBAA9B,KAAK;gBACG,yBAAyB,EAAA,CAAA;sBAAjC,KAAK;gBACG,0BAA0B,EAAA,CAAA;sBAAlC,KAAK;gBACG,cAAc,EAAA,CAAA;sBAAtB,KAAK;;;MCZK,yBAAyB,CAAA;;sHAAzB,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAzB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,EATlC,YAAA,EAAA,CAAA,4BAA4B,CAG5B,EAAA,OAAA,EAAA,CAAA,YAAY,aAGZ,4BAA4B,CAAA,EAAA,CAAA,CAAA;AAGnB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,YANlC,YAAY,CAAA,EAAA,CAAA,CAAA;2FAMH,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAXrC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE;wBACZ,4BAA4B;AAC7B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,YAAY;AACb,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,4BAA4B;AAC7B,qBAAA;AACF,iBAAA,CAAA;;;AChBD;;AAEG;;ACFH;;AAEG;;;;"}