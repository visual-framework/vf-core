{"version":3,"file":"vf-badge.angular.mjs","sources":["../../../projects/vf-badge.angular/src/lib/vf-badge.angular.component.ts","../../../projects/vf-badge.angular/src/lib/vf-badge.angular.module.ts","../../../projects/vf-badge.angular/src/public-api.ts","../../../projects/vf-badge.angular/src/vf-badge.angular.ts"],"sourcesContent":["import { Component, Input, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"vf-badge\",\n  template: `\n    <a [attr.id] = \"id !== undefined ? id : null\" *ngIf=\"badge_href !== ''\" [href]=\"badge_href\" [class]=\"class\" [innerHTML]=\"content\"></a>\n    <span [attr.id] = \"id !== undefined ? id : null\" *ngIf=\"!badge_href || badge_href === null || badge_href === ''\" [class]=\"class\" [innerHTML]=\"content\"></span>\n  `,\n  styleUrls: []\n})\n\nexport class VfBadgeAngularComponent implements OnInit {\n  /* Initialize values based on input values */\n  @Input() badge_href = '';\n  @Input() theme = '';\n  @Input() text = '';\n  @Input() style: Array<'primary' | 'secondary' | 'tertiary'> = [];\n  @Input() html = '';\n  @Input() override_class = '';\n  @Input() id: string | undefined;\n  content =  '';\n  class = 'vf-badge ';\n\n  ngOnInit(): void {\n    this.setValues();\n  }\n\n  ngOnChanges(): void {\n    this.setValues();\n  }\n\n  /* Set values as per input and updated changes */\n  setValues(): void {\n    /* Set values ass per the input */\n    this.content = this.html !== '' ? this.html : this.text;\n    this.class += this.theme !== '' ? 'vf-badge--' + this.theme +  ' ' : '';\n    /* Update class value if styles are received in input */\n    if(this.style.length > 0) {\n      this.style.forEach(style => {\n        this.class += 'vf-badge--' + style +  ' ';\n      });\n    }\n    /* Update class value if override style received in input */\n    this.class += this.override_class !== '' ? '| ' + this.override_class : '';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VfBadgeAngularComponent } from './vf-badge.angular.component';\n\n@NgModule({\n  declarations: [\n    VfBadgeAngularComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    VfBadgeAngularComponent\n  ]\n})\nexport class VfBadgeAngularModule { }\n","/*\n * Public API Surface of vf-badge.angular\n */\n\nexport * from './lib/vf-badge.angular.component';\nexport * from './lib/vf-badge.angular.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}